{"ast":null,"code":"var _jsxFileName = \"/home/wot-jainil/Desktop/Tasks/All-Tasks_Jainil_Solanki/React w-TS/nested-dynamic-table-v2/src/components/Customtable.tsx\",\n  _s = $RefreshSig$();\nimport { Accordion, AccordionDetails, AccordionSummary, Button, Dialog, DialogActions, DialogContent, DialogTitle, IconButton, TextField, Typography } from \"@mui/material\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar uuid = uuidv4();\nvar tindex = 0;\nexport default function CustomTable(props) {\n  _s();\n  const [formdata, setFormdata] = useState({\n    category: \"\",\n    type: \"\",\n    subcategoryid: \"\",\n    level: 0\n  });\n  console.log(\"Receive in custom table\", props.item);\n  function handleOpenSubCategory(subcategoryid, subcategorylevel) {\n    setFormdata({\n      ...formdata,\n      subcategoryid: subcategoryid,\n      level: subcategorylevel\n    });\n    props.setSubOpen(true);\n  }\n  const handleCloseSubCategory = () => props.setSubOpen(false);\n  function addCategory(tableData, parentId, level) {\n    const updatedCategory = [...tableData];\n    uuid = uuidv4();\n    updatedCategory.forEach(category => {\n      const newCategory = {\n        id: uuid,\n        category: formdata.category,\n        // values: [],\n        values: props.item.types.map(it => {\n          return {\n            typeName: it.type,\n            typeValue: 0\n          };\n        }),\n        categories: [],\n        subcategories: [],\n        parentId: parentId,\n        currentLevel: level\n      };\n      if (category.id === parentId) {\n        if (!category.subcategories) {\n          rendersum(props.data, subcategory.parentId, subcategory.id, subcategory.currentLevel, tindex, Number(e.target.value));\n          category.subcategories = [];\n        }\n        category.subcategories.push(newCategory);\n        return;\n      }\n      if (category.subcategories) {\n        addCategory(category.subcategories, parentId, level + 1);\n      }\n    });\n    const updatedItem = {\n      ...props.item,\n      categories: updatedCategory\n    };\n    const updatedTableData = props.maindata.map(tableItem => tableItem.id === props.item.id ? updatedItem : tableItem);\n    props.setTableData(updatedTableData);\n    handleCloseSubCategory();\n  }\n  function updateValue(tableData, parentId, id, currentLevel, index, value) {\n    const updatedCategory = [...tableData];\n    updatedCategory.forEach(category => {\n      if (category.id === id) {\n        // If we found the category with the matching ID, update its values array at the specified index\n        const updatedValues = [...category.values];\n        updatedValues[index].typeValue = value;\n        category.values = updatedValues;\n        return;\n      }\n      if (category.subcategories) {\n        // If the category has subcategories, recursively call the updateValue function on each one\n        // let parent = category;\n        // if (parent) {\n        //   console.log(\"PKPK\", parent);\n        //   if (parent.subcategories && parent.subcategories.length > 1) {\n        //     parent.values[index].typeValue = parent.subcategories.reduce(\n        //       (acc: any, item: any) =>\n        //         acc.values[index].typeValue + item.values[index].typeValue\n        //     );\n        //   } else if (\n        //     parent.subcategories &&\n        //     parent.subcategories.length === 1\n        //   ) {\n        //     parent.values[index].typeValue =\n        //       parent.subcategories[0].values[index].typeValue;\n        //   }\n        //   console.log(\"PS\", parent.subcategories);\n        //   console.log(parent.values);\n        // }\n\n        updateValue(category.subcategories, category.id, id, currentLevel + 1, index, value);\n      }\n    });\n    const updatedItem = {\n      ...props.item,\n      categories: updatedCategory\n    };\n    const updatedTableData = props.maindata.map(tableItem => tableItem.id === props.item.id ? updatedItem : tableItem);\n    props.setTableData(updatedTableData);\n  }\n  function rendersum(tableData, parentId, id, currentLevel, index, value) {\n    const updatedCategory = [...tableData];\n    updatedCategory.forEach(category => {\n      if (category.subcategories) {\n        // If the category has subcategories, recursively call the updateValue function on each one\n        let parent = category;\n        if (parent) {\n          if (parent.subcategories && parent.subcategories.length > 1) {\n            parent.values[index].typeValue = parent.subcategories.reduce((acc, item) => acc.values[index].typeValue + item.values[index].typeValue);\n          } else if (parent.subcategories && parent.subcategories.length === 1) {\n            parent.values[index].typeValue = parent.subcategories[0].values[index].typeValue;\n          }\n        }\n        rendersum(category.subcategories, category.id, id, currentLevel + 1, index, value);\n      }\n    });\n    const updatedItem = {\n      ...props.item,\n      categories: updatedCategory\n    };\n    const updatedTableData = props.maindata.map(tableItem => tableItem.id === props.item.id ? updatedItem : tableItem);\n    props.setTableData(updatedTableData);\n  }\n  function deleteCategory(id) {\n    const updatedfilteredItem = props.item.categories.filter((item, index) => item.id !== id);\n    const updatedItem = {\n      ...props.item,\n      categories: updatedfilteredItem\n    };\n    const updatedTableData = props.maindata.map(tableItem => tableItem.id === props.item.id ? updatedItem : tableItem);\n    props.setTableData(updatedTableData);\n  }\n  const renderSubcategories = subcategories => {\n    return subcategories.map((subcategory, sindex) => {\n      if (subcategory.subcategories && subcategory.subcategories.length > 0) {\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: /*#__PURE__*/_jsxDEV(TableCell, {\n              colSpan: props.item.types.length + 2,\n              children: /*#__PURE__*/_jsxDEV(Accordion, {\n                children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n                  expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 49\n                  }, this),\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    children: subcategory.category\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 21\n                  }, this), subcategory.values.map(value => {\n                    return /*#__PURE__*/_jsxDEV(Typography, {\n                      children: value.typeValue\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 242,\n                      columnNumber: 30\n                    }, this);\n                  }), props.edit === 1 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [subcategory.currentLevel === 0 && /*#__PURE__*/_jsxDEV(IconButton, {\n                      \"aria-label\": \"delete\",\n                      color: \"error\",\n                      size: \"small\",\n                      onClick: () => deleteCategory(subcategory.id),\n                      children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                        fontSize: \"inherit\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 253,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 247,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                      \"aria-label\": \"Add Another Category\",\n                      color: \"primary\",\n                      size: \"small\",\n                      onClick: e => {\n                        e.stopPropagation();\n                        handleOpenSubCategory(subcategory.id, subcategory.currentLevel + 1);\n                      },\n                      children: /*#__PURE__*/_jsxDEV(AddIcon, {\n                        fontSize: \"inherit\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 268,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 256,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n                  children: renderSubcategories(subcategory.subcategories)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this)\n        }, subcategory.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            style: {\n              backgroundColor: props.theme === \"light\" ? \"\" : \"#fff\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: [subcategory.category, props.edit === 1 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [subcategory.currentLevel === 0 && /*#__PURE__*/_jsxDEV(IconButton, {\n                  \"aria-label\": \"delete\",\n                  color: \"error\",\n                  size: \"small\",\n                  onClick: () => deleteCategory(subcategory.id),\n                  children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                    fontSize: \"inherit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 300,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  \"aria-label\": \"Add Another Category\",\n                  color: \"primary\",\n                  size: \"small\",\n                  onClick: e => {\n                    e.stopPropagation();\n                    handleOpenSubCategory(subcategory.id, subcategory.currentLevel + 1);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(AddIcon, {\n                    fontSize: \"inherit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 315,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 15\n            }, this), props.item.types.map((type, index) => {\n              return /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  margin: \"dense\",\n                  type: \"number\",\n                  fullWidth: true,\n                  variant: \"outlined\",\n                  value: subcategories[sindex].values[index].typeValue,\n                  onChange: e => {\n                    updateValue(props.data, subcategory.parentId, subcategory.id, subcategory.currentLevel, index, Number(e.target.value));\n                    tindex = index;\n                    rendersum(props.data, subcategory.parentId, subcategory.id, subcategory.currentLevel, index, Number(e.target.value));\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this)\n        }, subcategory.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this);\n      }\n    });\n  };\n  function deleteType(tindex) {\n    const updatedTableData = {\n      ...props.item\n    };\n    const {\n      categories\n    } = updatedTableData;\n\n    // Helper function to update values recursively\n    const updateValues = categoryArr => {\n      categoryArr.forEach(category => {\n        if (category.values) {\n          const filtered = category.values.filter((item, index) => index !== tindex);\n          category.values = filtered;\n        }\n        if (category.subcategories) {\n          updateValues(category.subcategories);\n        }\n      });\n    };\n\n    // Remove type from table data types array\n    updatedTableData.types.splice(tindex, 1);\n\n    // Update values array for all categories at any level\n    updateValues(categories);\n\n    // Update table data in state\n    const updatedMainData = props.maindata.map(tableItem => tableItem.id === props.item.id ? updatedTableData : tableItem);\n    props.setTableData(updatedMainData);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            style: {\n              background: \"#b3bfd1\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              style: {\n                color: props.theme === \"light\" ? \"#000\" : \"#fff\"\n              },\n              children: props.item.categoryname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 15\n            }, this), props.item.types.map((type, index) => {\n              return /*#__PURE__*/_jsxDEV(TableCell, {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    color: props.theme === \"light\" ? \"#000\" : \"#fff\"\n                  },\n                  children: type.type\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 411,\n                  columnNumber: 21\n                }, this), props.edit === 1 && /*#__PURE__*/_jsxDEV(IconButton, {\n                  \"aria-label\": \"delete\",\n                  color: \"error\",\n                  size: \"small\",\n                  onClick: () => deleteType(index),\n                  children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                    fontSize: \"inherit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 426,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 420,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: renderSubcategories(props.data)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: props.openSubCategory,\n      onClose: handleCloseSubCategory,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Add New Sub Category Row\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          addCategory(props.data, formdata.subcategoryid, formdata.level);\n        },\n        children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            autoFocus: true,\n            margin: \"dense\",\n            id: \"name\",\n            label: \"Category Name\",\n            type: \"text\",\n            fullWidth: true,\n            variant: \"outlined\",\n            onChange: e => setFormdata({\n              ...formdata,\n              category: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"error\",\n            onClick: handleCloseSubCategory,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"success\",\n            type: \"submit\",\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(CustomTable, \"P6CNPWxgaubWnvsI+lf9a0kbmMQ=\");\n_c = CustomTable;\nvar _c;\n$RefreshReg$(_c, \"CustomTable\");","map":{"version":3,"names":["Accordion","AccordionDetails","AccordionSummary","Button","Dialog","DialogActions","DialogContent","DialogTitle","IconButton","TextField","Typography","ExpandMoreIcon","AddIcon","DeleteIcon","v4","uuidv4","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","uuid","tindex","CustomTable","props","_s","formdata","setFormdata","category","type","subcategoryid","level","console","log","item","handleOpenSubCategory","subcategorylevel","setSubOpen","handleCloseSubCategory","addCategory","tableData","parentId","updatedCategory","forEach","newCategory","id","values","types","map","it","typeName","typeValue","categories","subcategories","currentLevel","rendersum","data","subcategory","Number","e","target","value","push","updatedItem","updatedTableData","maindata","tableItem","setTableData","updateValue","index","updatedValues","parent","length","reduce","acc","deleteCategory","updatedfilteredItem","filter","renderSubcategories","sindex","children","colSpan","expandIcon","fileName","_jsxFileName","lineNumber","columnNumber","edit","color","size","onClick","fontSize","stopPropagation","style","backgroundColor","theme","margin","fullWidth","variant","onChange","deleteType","updateValues","categoryArr","filtered","splice","updatedMainData","background","categoryname","open","openSubCategory","onClose","onSubmit","preventDefault","autoFocus","label","required","_c","$RefreshReg$"],"sources":["/home/wot-jainil/Desktop/Tasks/All-Tasks_Jainil_Solanki/React w-TS/nested-dynamic-table-v2/src/components/Customtable.tsx"],"sourcesContent":["import {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  IconButton,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nvar uuid = uuidv4();\ninterface Category {\n  id: number;\n  category: string;\n  values: { typeName: string; typeValue: number }[];\n  subcategories?: Category[];\n  parentId: number;\n  currentLevel: number;\n}\nvar tindex: number = 0;\ntype Props = {\n  data: Category[];\n  setTableData: any;\n  item: any;\n  maindata: any;\n  openSubCategory: any;\n  edit: number;\n  setSubOpen: any;\n  theme: any;\n};\n\nexport default function CustomTable(props: Props) {\n  const [formdata, setFormdata] = useState({\n    category: \"\",\n    type: \"\",\n    subcategoryid: \"\",\n    level: 0,\n  });\n\n  console.log(\"Receive in custom table\", props.item);\n  function handleOpenSubCategory(subcategoryid: any, subcategorylevel: any) {\n    setFormdata({\n      ...formdata,\n      subcategoryid: subcategoryid,\n      level: subcategorylevel,\n    });\n    props.setSubOpen(true);\n  }\n  const handleCloseSubCategory = () => props.setSubOpen(false);\n\n  function addCategory(tableData: any, parentId: any, level: number) {\n    const updatedCategory = [...tableData];\n    uuid = uuidv4();\n    updatedCategory.forEach((category: any) => {\n      const newCategory = {\n        id: uuid,\n        category: formdata.category,\n        // values: [],\n        values: props.item.types.map((it: { type: string }) => {\n          return { typeName: it.type, typeValue: 0 };\n        }),\n        categories: [],\n        subcategories: [],\n        parentId: parentId,\n        currentLevel: level,\n      };\n      if (category.id === parentId) {\n        if (!category.subcategories) {\n          rendersum(\n            props.data,\n            subcategory.parentId,\n            subcategory.id,\n            subcategory.currentLevel,\n            tindex,\n            Number(e.target.value)\n          );\n          category.subcategories = [];\n        }\n\n        category.subcategories.push(newCategory);\n        return;\n      }\n      if (category.subcategories) {\n        addCategory(category.subcategories, parentId, level + 1);\n      }\n    });\n\n    const updatedItem = { ...props.item, categories: updatedCategory };\n\n    const updatedTableData = props.maindata.map((tableItem: any) =>\n      tableItem.id === props.item.id ? updatedItem : tableItem\n    );\n    props.setTableData(updatedTableData);\n    handleCloseSubCategory();\n  }\n\n  function updateValue(\n    tableData: any,\n    parentId: any,\n    id: any,\n    currentLevel: any,\n    index: any,\n    value: number\n  ) {\n    const updatedCategory = [...tableData];\n    updatedCategory.forEach((category: any) => {\n      if (category.id === id) {\n        // If we found the category with the matching ID, update its values array at the specified index\n        const updatedValues = [...category.values];\n        updatedValues[index].typeValue = value;\n        category.values = updatedValues;\n        return;\n      }\n      if (category.subcategories) {\n        // If the category has subcategories, recursively call the updateValue function on each one\n        // let parent = category;\n        // if (parent) {\n        //   console.log(\"PKPK\", parent);\n        //   if (parent.subcategories && parent.subcategories.length > 1) {\n        //     parent.values[index].typeValue = parent.subcategories.reduce(\n        //       (acc: any, item: any) =>\n        //         acc.values[index].typeValue + item.values[index].typeValue\n        //     );\n        //   } else if (\n        //     parent.subcategories &&\n        //     parent.subcategories.length === 1\n        //   ) {\n        //     parent.values[index].typeValue =\n        //       parent.subcategories[0].values[index].typeValue;\n        //   }\n        //   console.log(\"PS\", parent.subcategories);\n        //   console.log(parent.values);\n        // }\n\n        updateValue(\n          category.subcategories,\n          category.id,\n          id,\n          currentLevel + 1,\n          index,\n          value\n        );\n      }\n    });\n\n    const updatedItem = { ...props.item, categories: updatedCategory };\n\n    const updatedTableData = props.maindata.map((tableItem: any) =>\n      tableItem.id === props.item.id ? updatedItem : tableItem\n    );\n    props.setTableData(updatedTableData);\n  }\n\n  function rendersum(\n    tableData: any,\n    parentId: any,\n    id: any,\n    currentLevel: any,\n    index: any,\n    value: number\n  ) {\n    const updatedCategory = [...tableData];\n    updatedCategory.forEach((category: any) => {\n      if (category.subcategories) {\n        // If the category has subcategories, recursively call the updateValue function on each one\n        let parent = category;\n        if (parent) {\n          if (parent.subcategories && parent.subcategories.length > 1) {\n            parent.values[index].typeValue = parent.subcategories.reduce(\n              (acc: any, item: any) =>\n                acc.values[index].typeValue + item.values[index].typeValue\n            );\n          } else if (\n            parent.subcategories &&\n            parent.subcategories.length === 1\n          ) {\n            parent.values[index].typeValue =\n              parent.subcategories[0].values[index].typeValue;\n          }\n        }\n\n        rendersum(\n          category.subcategories,\n          category.id,\n          id,\n          currentLevel + 1,\n          index,\n          value\n        );\n      }\n    });\n\n    const updatedItem = { ...props.item, categories: updatedCategory };\n\n    const updatedTableData = props.maindata.map((tableItem: any) =>\n      tableItem.id === props.item.id ? updatedItem : tableItem\n    );\n    props.setTableData(updatedTableData);\n  }\n\n  function deleteCategory(id: any) {\n    const updatedfilteredItem = props.item.categories.filter(\n      (item: any, index: number) => item.id !== id\n    );\n    const updatedItem = {\n      ...props.item,\n      categories: updatedfilteredItem,\n    };\n    const updatedTableData = props.maindata.map((tableItem: any) =>\n      tableItem.id === props.item.id ? updatedItem : tableItem\n    );\n    props.setTableData(updatedTableData);\n  }\n\n  const renderSubcategories = (subcategories: Category[]) => {\n    return subcategories.map((subcategory, sindex) => {\n      if (subcategory.subcategories && subcategory.subcategories.length > 0) {\n        return (\n          <React.Fragment key={subcategory.id}>\n            <TableRow>\n              <TableCell colSpan={props.item.types.length + 2}>\n                <Accordion>\n                  <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                    <Typography>{subcategory.category}</Typography>\n                    {subcategory.values.map((value) => {\n                      return <Typography>{value.typeValue}</Typography>;\n                    })}\n                    {props.edit === 1 && (\n                      <>\n                        {subcategory.currentLevel === 0 && (\n                          <IconButton\n                            aria-label=\"delete\"\n                            color=\"error\"\n                            size=\"small\"\n                            onClick={() => deleteCategory(subcategory.id)}\n                          >\n                            <DeleteIcon fontSize=\"inherit\" />\n                          </IconButton>\n                        )}\n                        <IconButton\n                          aria-label=\"Add Another Category\"\n                          color=\"primary\"\n                          size=\"small\"\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            handleOpenSubCategory(\n                              subcategory.id,\n                              subcategory.currentLevel + 1\n                            );\n                          }}\n                        >\n                          <AddIcon fontSize=\"inherit\" />\n                        </IconButton>\n                      </>\n                    )}\n                  </AccordionSummary>\n                  <AccordionDetails>\n                    {renderSubcategories(subcategory.subcategories)}\n                  </AccordionDetails>\n                </Accordion>\n              </TableCell>\n            </TableRow>\n          </React.Fragment>\n        );\n      } else {\n        return (\n          <React.Fragment key={subcategory.id}>\n            <TableRow\n              style={{\n                backgroundColor: props.theme === \"light\" ? \"\" : \"#fff\",\n              }}\n            >\n              <TableCell>\n                {subcategory.category}\n                {props.edit === 1 && (\n                  <>\n                    {subcategory.currentLevel === 0 && (\n                      <IconButton\n                        aria-label=\"delete\"\n                        color=\"error\"\n                        size=\"small\"\n                        onClick={() => deleteCategory(subcategory.id)}\n                      >\n                        <DeleteIcon fontSize=\"inherit\" />\n                      </IconButton>\n                    )}\n                    <IconButton\n                      aria-label=\"Add Another Category\"\n                      color=\"primary\"\n                      size=\"small\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        handleOpenSubCategory(\n                          subcategory.id,\n                          subcategory.currentLevel + 1\n                        );\n                      }}\n                    >\n                      <AddIcon fontSize=\"inherit\" />\n                    </IconButton>\n                  </>\n                )}\n              </TableCell>\n              {props.item.types.map((type: any, index: any) => {\n                return (\n                  <TableCell>\n                    <TextField\n                      margin=\"dense\"\n                      type=\"number\"\n                      fullWidth\n                      variant=\"outlined\"\n                      value={subcategories[sindex].values[index].typeValue}\n                      onChange={(e) => {\n                        updateValue(\n                          props.data,\n                          subcategory.parentId,\n                          subcategory.id,\n                          subcategory.currentLevel,\n                          index,\n                          Number(e.target.value)\n                        );\n                        tindex = index;\n                        rendersum(\n                          props.data,\n                          subcategory.parentId,\n                          subcategory.id,\n                          subcategory.currentLevel,\n                          index,\n                          Number(e.target.value)\n                        );\n                      }}\n                    />\n                  </TableCell>\n                );\n              })}\n              {/* <TableCell>\n                {subcategory.values.map((value: any) => value + \", \")}\n              </TableCell> */}\n            </TableRow>\n          </React.Fragment>\n        );\n      }\n    });\n  };\n\n  function deleteType(tindex: number) {\n    const updatedTableData = { ...props.item };\n    const { categories } = updatedTableData;\n\n    // Helper function to update values recursively\n    const updateValues = (categoryArr: any) => {\n      categoryArr.forEach((category: any) => {\n        if (category.values) {\n          const filtered = category.values.filter(\n            (item: any, index: any) => index !== tindex\n          );\n\n          category.values = filtered;\n        }\n        if (category.subcategories) {\n          updateValues(category.subcategories);\n        }\n      });\n    };\n\n    // Remove type from table data types array\n    updatedTableData.types.splice(tindex, 1);\n\n    // Update values array for all categories at any level\n    updateValues(categories);\n\n    // Update table data in state\n    const updatedMainData = props.maindata.map((tableItem: any) =>\n      tableItem.id === props.item.id ? updatedTableData : tableItem\n    );\n    props.setTableData(updatedMainData);\n  }\n\n  return (\n    <>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow style={{ background: \"#b3bfd1\" }}>\n              <TableCell\n                style={{\n                  color: props.theme === \"light\" ? \"#000\" : \"#fff\",\n                }}\n              >\n                {props.item.categoryname}\n              </TableCell>\n              {props.item.types.map((type: any, index: any) => {\n                return (\n                  <TableCell>\n                    <span\n                      style={{\n                        color: props.theme === \"light\" ? \"#000\" : \"#fff\",\n                      }}\n                    >\n                      {type.type}\n                    </span>\n\n                    {props.edit === 1 && (\n                      <IconButton\n                        aria-label=\"delete\"\n                        color=\"error\"\n                        size=\"small\"\n                        onClick={() => deleteType(index)}\n                      >\n                        <DeleteIcon fontSize=\"inherit\" />\n                      </IconButton>\n                    )}\n                  </TableCell>\n                );\n              })}\n            </TableRow>\n          </TableHead>\n          <TableBody>{renderSubcategories(props.data)}</TableBody>\n        </Table>\n      </TableContainer>\n\n      {/* //Sub Category Dialog */}\n      <Dialog open={props.openSubCategory} onClose={handleCloseSubCategory}>\n        <DialogTitle>Add New Sub Category Row</DialogTitle>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            addCategory(props.data, formdata.subcategoryid, formdata.level);\n          }}\n        >\n          <DialogContent>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              label=\"Category Name\"\n              type=\"text\"\n              fullWidth\n              variant=\"outlined\"\n              onChange={(e) =>\n                setFormdata({\n                  ...formdata,\n                  category: e.target.value,\n                })\n              }\n              required\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button\n              variant=\"outlined\"\n              color=\"error\"\n              onClick={handleCloseSubCategory}\n            >\n              Cancel\n            </Button>\n\n            <Button variant=\"outlined\" color=\"success\" type=\"submit\">\n              Create\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}