{"ast":null,"code":"var _jsxFileName = \"/home/wot-jainil/Desktop/Tasks/All-Tasks_Jainil_Solanki/React w-TS/nested-dynamic-table-v2/src/components/Customtable.tsx\",\n  _s = $RefreshSig$();\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, IconButton, TextField, Typography } from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar uuid = uuidv4();\nexport default function CustomTable(props) {\n  _s();\n  useEffect(() => {\n    props.setForceRender(!props.forceRender);\n  });\n  // ------------------------------Declarations-------------------------\n  const [formdata, setFormdata] = useState({\n    category: \"\",\n    type: \"\",\n    subcategoryid: \"\",\n    level: 0\n  });\n  // ------------------------------Declarations-------------------------\n\n  // ------------------------------Functions-------------------------\n\n  // ------------------------------Functions for add sub category dialog-------------------------\n  function handleOpenSubCategory(subcategoryid, subcategorylevel) {\n    setFormdata({\n      ...formdata,\n      subcategoryid: subcategoryid,\n      level: subcategorylevel\n    });\n    props.setSubOpen(true);\n  }\n  const handleCloseSubCategory = () => props.setSubOpen(false);\n\n  // ------------------------------Function for adding subcategories at nth level-------------------------\n  function addCategory(tableData, parentId, level) {\n    const updatedCategory = [...tableData];\n    uuid = uuidv4();\n    updatedCategory.forEach(category => {\n      const newCategory = {\n        id: uuid,\n        category: formdata.category,\n        // values: [],\n        values: props.item.types.map(it => {\n          return {\n            typeName: it.type,\n            typeValue: 0\n          };\n        }),\n        categories: [],\n        subcategories: [],\n        parentId: parentId,\n        currentLevel: level\n      };\n      if (category.id === parentId) {\n        if (!category.subcategories) {\n          category.subcategories = [];\n        }\n        category.subcategories.push(newCategory);\n        return;\n      }\n      if (category.subcategories) {\n        addCategory(category.subcategories, parentId, level + 1);\n      }\n    });\n    const updatedItem = {\n      ...props.item,\n      categories: updatedCategory\n    };\n    const updatedTableData = props.maindata.map(tableItem => tableItem.id === props.item.id ? updatedItem : tableItem);\n    props.setTableData(updatedTableData);\n    handleCloseSubCategory();\n  }\n\n  // ------------------------------Function for updating values of categories -------------------------\n  function updateValue(tableData, parentId, id, currentLevel, index, value) {\n    const updatedCategory = [...tableData];\n    updatedCategory.forEach(category => {\n      if (category.id === id) {\n        // If we found the category with the matching ID, update its values array at the specified index\n        const updatedValues = [...category.values];\n        updatedValues[index].typeValue = value;\n        category.values = updatedValues;\n        return;\n      }\n      if (category.subcategories) {\n        // If the category has subcategories, recursively call the updateValue function on each one\n\n        updateValue(category.subcategories, category.id, id, currentLevel + 1, index, value);\n      }\n    });\n    const updatedItem = {\n      ...props.item,\n      categories: updatedCategory\n    };\n    const updatedTableData = props.maindata.map(tableItem => tableItem.id === props.item.id ? updatedItem : tableItem);\n    props.setTableData(updatedTableData);\n  }\n\n  // ------------------------------Function for deleting primary category -------------------------\n  function deleteCategory(id) {\n    const updatedfilteredItem = props.item.categories.filter((item, index) => item.id !== id);\n    const updatedItem = {\n      ...props.item,\n      categories: updatedfilteredItem\n    };\n    const updatedTableData = props.maindata.map(tableItem => tableItem.id === props.item.id ? updatedItem : tableItem);\n    props.setTableData(updatedTableData);\n    props.setData(updatedItem);\n  }\n\n  // ------------------------------Function for calculating sum of values of category having subcategories -------------------------\n  function updateValuesSum(subcategory, index) {\n    if (subcategory.subcategories && subcategory.values[index] && subcategory.subcategories.length > 1) {\n      let sum = 0;\n      subcategory.subcategories.forEach(item => {\n        sum += item.values[index].typeValue;\n      });\n      subcategory.values[index].typeValue = sum;\n    } else if (subcategory.subcategories && subcategory.subcategories.length === 1) {\n      subcategory.values[index].typeValue = subcategory.subcategories[0].values[index].typeValue;\n    }\n  }\n\n  // ------------------------------Function for displaying categories -------------------------\n  // const renderSubcategories = (subcategories: any) => {\n  //   return subcategories.map((subcategory: any, sindex: any) => {\n  //     if (subcategory.subcategories && subcategory.subcategories.length > 0) {\n  //       return (\n  //         <React.Fragment key={subcategory.id}>\n  //           <TableRow>\n  //             <TableCell colSpan={props.item.types.length + 2} width=\"auto\">\n  //               <Accordion>\n  //                 <AccordionSummary\n  //                   expandIcon={<ExpandMoreIcon />}\n  //                   style={{\n  //                     background: props.theme === \"light\" ? \"#fff\" : \"#edf0f4\",\n  //                     borderRadius: \"5px\",\n  //                   }}\n  //                 >\n  //                   <TableCell>\n  //                     <Typography>{subcategory.category}</Typography>\n  //                   </TableCell>\n\n  //                   {subcategory.values.map((value: any, index: any) => {\n  //                     updateValuesSum(subcategory, index);\n  //                     return (\n  //                       <TableCell>\n  //                         <Typography>{value.typeValue}</Typography>\n  //                       </TableCell>\n  //                     );\n  //                   })}\n\n  //                   {props.edit === 1 && (\n  //                     <>\n  //                       {subcategory.currentLevel === 0 && (\n  //                         <IconButton\n  //                           aria-label=\"delete\"\n  //                           color=\"error\"\n  //                           size=\"small\"\n  //                           onClick={() => deleteCategory(subcategory.id)}\n  //                         >\n  //                           <DeleteIcon fontSize=\"inherit\" />\n  //                         </IconButton>\n  //                       )}\n  //                       <IconButton\n  //                         aria-label=\"Add Another Category\"\n  //                         color=\"primary\"\n  //                         size=\"small\"\n  //                         onClick={(e) => {\n  //                           e.stopPropagation();\n  //                           handleOpenSubCategory(\n  //                             subcategory.id,\n  //                             subcategory.currentLevel + 1\n  //                           );\n  //                         }}\n  //                       >\n  //                         <AddIcon fontSize=\"inherit\" />\n  //                       </IconButton>\n  //                     </>\n  //                   )}\n  //                 </AccordionSummary>\n  //                 <AccordionDetails>\n  //                   {renderSubcategories(subcategory.subcategories)}\n  //                 </AccordionDetails>\n  //               </Accordion>\n  //             </TableCell>\n  //           </TableRow>\n  //         </React.Fragment>\n  //       );\n  //     } else {\n  //       return (\n  //         <React.Fragment key={subcategory.id}>\n  //           <TableRow\n  //             style={{\n  //               backgroundColor: props.theme === \"light\" ? \"\" : \"#fff\",\n  //             }}\n  //           >\n  //             <TableCell sx={{ maxWidth: 300, minWidth: 300 }}>\n  //               {subcategory.category}\n\n  //               {props.edit === 1 && (\n  //                 <>\n  //                   {subcategory.currentLevel === 0 && (\n  //                     <IconButton\n  //                       aria-label=\"delete\"\n  //                       color=\"error\"\n  //                       size=\"small\"\n  //                       onClick={() => deleteCategory(subcategory.id)}\n  //                     >\n  //                       <DeleteIcon fontSize=\"inherit\" />\n  //                     </IconButton>\n  //                   )}\n  //                   <IconButton\n  //                     aria-label=\"Add Another Category\"\n  //                     color=\"primary\"\n  //                     size=\"small\"\n  //                     onClick={(e) => {\n  //                       e.stopPropagation();\n  //                       handleOpenSubCategory(\n  //                         subcategory.id,\n  //                         subcategory.currentLevel + 1\n  //                       );\n  //                     }}\n  //                   >\n  //                     <AddIcon fontSize=\"inherit\" />\n  //                   </IconButton>\n  //                 </>\n  //               )}\n  //             </TableCell>\n  //             {props.item.types.map((type: any, index: any) => {\n  //               return (\n  //                 <TableCell style={{ padding: \"5px\" }}>\n  //                   <TextField\n  //                     margin=\"dense\"\n  //                     type=\"number\"\n  //                     fullWidth\n  //                     variant=\"outlined\"\n  //                     InputProps={{\n  //                       readOnly: props.edit === 0 ? true : false,\n  //                     }}\n  //                     sx={{ maxWidth: 400, minWidth: 400 }}\n  //                     value={subcategories[sindex].values[index].typeValue}\n  //                     onChange={(e) => {\n  //                       updateValue(\n  //                         props.data,\n  //                         subcategory.parentId,\n  //                         subcategory.id,\n  //                         subcategory.currentLevel,\n  //                         index,\n  //                         Number(e.target.value)\n  //                       );\n  //                     }}\n  //                   />\n  //                 </TableCell>\n  //               );\n  //             })}\n  //           </TableRow>\n  //         </React.Fragment>\n  //       );\n  //     }\n  //   });\n  // };\n\n  const renderSubcategories = subcategories => {\n    return subcategories.map((subcategory, sindex) => {\n      if (subcategory.subcategories && subcategory.subcategories.length > 0) {\n        return (\n          /*#__PURE__*/\n          // <React.Fragment key={subcategory.id}>\n          //   <TableRow>\n          //     <TableCell colSpan={props.item.types.length + 2} width=\"auto\">\n          //       <Accordion>\n          //         <AccordionSummary\n          //           expandIcon={<ExpandMoreIcon />}\n          //           style={{\n          //             background: props.theme === \"light\" ? \"#fff\" : \"#edf0f4\",\n          //             borderRadius: \"5px\",\n          //           }}\n          //         >\n          //           <TableCell>\n          //             <Typography>{subcategory.category}</Typography>\n          //           </TableCell>\n          //           {subcategory.values.map((value: any, index: any) => {\n          //             updateValuesSum(subcategory, index);\n          //             return (\n          //               <TableCell>\n          //                 <Typography>{value.typeValue}</Typography>\n          //               </TableCell>\n          //             );\n          //           })}\n          //           {props.edit === 1 && (\n          //             <>\n          //               {subcategory.currentLevel === 0 && (\n          //                 <IconButton\n          //                   aria-label=\"delete\"\n          //                   color=\"error\"\n          //                   size=\"small\"\n          //                   onClick={() => deleteCategory(subcategory.id)}\n          //                 >\n          //                   <DeleteIcon fontSize=\"inherit\" />\n          //                 </IconButton>\n          //               )}\n          //               <IconButton\n          //                 aria-label=\"Add Another Category\"\n          //                 color=\"primary\"\n          //                 size=\"small\"\n          //                 onClick={(e) => {\n          //                   e.stopPropagation();\n          //                   handleOpenSubCategory(\n          //                     subcategory.id,\n          //                     subcategory.currentLevel + 1\n          //                   );\n          //                 }}\n          //               >\n          //                 <AddIcon fontSize=\"inherit\" />\n          //               </IconButton>\n          //             </>\n          //           )}\n          //         </AccordionSummary>\n          //         <AccordionDetails>\n          //           {renderSubcategories(subcategory.subcategories)}\n          //         </AccordionDetails>\n          //       </Accordion>\n          //     </TableCell>\n          //   </TableRow>\n          // </React.Fragment>\n          _jsxDEV(React.Fragment, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              style: {\n                backgroundColor: props.theme === \"light\" ? \"\" : \"#fff\"\n              },\n              children: /*#__PURE__*/_jsxDEV(TableCell, {\n                sx: {\n                  maxWidth: 300,\n                  minWidth: 300\n                },\n                children: [subcategory.category, props.edit === 1 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [subcategory.currentLevel === 0 && /*#__PURE__*/_jsxDEV(IconButton, {\n                    \"aria-label\": \"delete\",\n                    color: \"error\",\n                    size: \"small\",\n                    onClick: () => deleteCategory(subcategory.id),\n                    children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                      fontSize: \"inherit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 416,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 410,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                    \"aria-label\": \"Add Another Category\",\n                    color: \"primary\",\n                    size: \"small\",\n                    onClick: e => {\n                      e.stopPropagation();\n                      handleOpenSubCategory(subcategory.id, subcategory.currentLevel + 1);\n                    },\n                    children: /*#__PURE__*/_jsxDEV(AddIcon, {\n                      fontSize: \"inherit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 431,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 419,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true), subcategory.values.map((value, index) => {\n                  updateValuesSum(subcategory, index);\n                  return /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      children: value.typeValue\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 439,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 438,\n                    columnNumber: 21\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 13\n            }, this)\n          }, subcategory.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 11\n          }, this)\n        );\n      } else {\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            style: {\n              backgroundColor: props.theme === \"light\" ? \"\" : \"#fff\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                maxWidth: 300,\n                minWidth: 300\n              },\n              children: [subcategory.category, props.edit === 1 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [subcategory.currentLevel === 0 && /*#__PURE__*/_jsxDEV(IconButton, {\n                  \"aria-label\": \"delete\",\n                  color: \"error\",\n                  size: \"small\",\n                  onClick: () => deleteCategory(subcategory.id),\n                  children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                    fontSize: \"inherit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 469,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 463,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  \"aria-label\": \"Add Another Category\",\n                  color: \"primary\",\n                  size: \"small\",\n                  onClick: e => {\n                    e.stopPropagation();\n                    handleOpenSubCategory(subcategory.id, subcategory.currentLevel + 1);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(AddIcon, {\n                    fontSize: \"inherit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 484,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 472,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 15\n            }, this), props.item.types.map((type, index) => {\n              return /*#__PURE__*/_jsxDEV(TableCell, {\n                style: {\n                  padding: \"5px\"\n                },\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  margin: \"dense\",\n                  type: \"number\",\n                  fullWidth: true,\n                  variant: \"outlined\",\n                  InputProps: {\n                    readOnly: props.edit === 0 ? true : false\n                  },\n                  sx: {\n                    maxWidth: 400,\n                    minWidth: 400\n                  },\n                  value: subcategories[sindex].values[index].typeValue,\n                  onChange: e => {\n                    updateValue(props.data, subcategory.parentId, subcategory.id, subcategory.currentLevel, index, Number(e.target.value));\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 492,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 491,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 13\n          }, this)\n        }, subcategory.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 11\n        }, this);\n      }\n    });\n  };\n\n  // ------------------------------Function for deleting type -------------------------\n  function deleteType(tindex) {\n    const updatedTableData = {\n      ...props.item\n    };\n    const {\n      categories\n    } = updatedTableData;\n\n    // Helper function to update values recursively\n    const updateValues = categoryArr => {\n      categoryArr.forEach(category => {\n        if (category.values) {\n          const filtered = category.values.filter((item, index) => index !== tindex);\n          category.values = filtered;\n        }\n        if (category.subcategories) {\n          updateValues(category.subcategories);\n        }\n      });\n    };\n\n    // Remove type from table data types array\n    updatedTableData.types.splice(tindex, 1);\n\n    // Update values array for all categories at any level\n    updateValues(categories);\n\n    // Update table data in state\n    const updatedMainData = props.maindata.map(tableItem => tableItem.id === props.item.id ? updatedTableData : tableItem);\n    props.setTableData(updatedMainData);\n  }\n\n  // ------------------------------Functions End-------------------------\n\n  // ------------------------------Component-------------------------\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            style: {\n              background: props.theme === \"light\" ? \"#b3bfd1\" : \"#3e1046\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              style: {\n                color: props.theme === \"light\" ? \"#000\" : \"#fff\",\n                fontSize: \"16px\",\n                fontWeight: \"600\"\n              },\n              children: props.item.categoryname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 15\n            }, this), props.item.types.map((type, index) => {\n              return /*#__PURE__*/_jsxDEV(TableCell, {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    color: props.theme === \"light\" ? \"#000\" : \"#fff\",\n                    fontSize: \"16px\",\n                    fontWeight: \"600\"\n                  },\n                  children: type.type\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 582,\n                  columnNumber: 21\n                }, this), props.edit === 1 && /*#__PURE__*/_jsxDEV(IconButton, {\n                  \"aria-label\": \"delete\",\n                  color: \"error\",\n                  size: \"small\",\n                  onClick: () => deleteType(index),\n                  children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n                    fontSize: \"inherit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 599,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 593,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 581,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 565,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: renderSubcategories(props.data)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 607,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: props.openSubCategory,\n      onClose: handleCloseSubCategory,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Add New Sub Category Row\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          addCategory(props.data, formdata.subcategoryid, formdata.level);\n        },\n        children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            autoFocus: true,\n            margin: \"dense\",\n            id: \"name\",\n            label: \"Category Name\",\n            type: \"text\",\n            fullWidth: true,\n            variant: \"outlined\",\n            onChange: e => setFormdata({\n              ...formdata,\n              category: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 621,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 620,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"error\",\n            onClick: handleCloseSubCategory,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 639,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"success\",\n            type: \"submit\",\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 647,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 612,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(CustomTable, \"2DeVLsgaq5PVFSD1jNOWqA9dlV0=\");\n_c = CustomTable;\nvar _c;\n$RefreshReg$(_c, \"CustomTable\");","map":{"version":3,"names":["Button","Dialog","DialogActions","DialogContent","DialogTitle","IconButton","TextField","Typography","AddIcon","DeleteIcon","v4","uuidv4","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","uuid","CustomTable","props","_s","setForceRender","forceRender","formdata","setFormdata","category","type","subcategoryid","level","handleOpenSubCategory","subcategorylevel","setSubOpen","handleCloseSubCategory","addCategory","tableData","parentId","updatedCategory","forEach","newCategory","id","values","item","types","map","it","typeName","typeValue","categories","subcategories","currentLevel","push","updatedItem","updatedTableData","maindata","tableItem","setTableData","updateValue","index","value","updatedValues","deleteCategory","updatedfilteredItem","filter","setData","updateValuesSum","subcategory","length","sum","renderSubcategories","sindex","children","style","backgroundColor","theme","sx","maxWidth","minWidth","edit","color","size","onClick","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","e","stopPropagation","padding","margin","fullWidth","variant","InputProps","readOnly","onChange","data","Number","target","deleteType","tindex","updateValues","categoryArr","filtered","splice","updatedMainData","background","fontWeight","categoryname","open","openSubCategory","onClose","onSubmit","preventDefault","autoFocus","label","required","_c","$RefreshReg$"],"sources":["/home/wot-jainil/Desktop/Tasks/All-Tasks_Jainil_Solanki/React w-TS/nested-dynamic-table-v2/src/components/Customtable.tsx"],"sourcesContent":["import {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  IconButton,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nvar uuid = uuidv4();\ninterface Category {\n  id: number;\n  category: string;\n  values: { typeName: string; typeValue: number }[];\n  subcategories?: Category[];\n  parentId: number;\n  currentLevel: number;\n}\n\ntype Props = {\n  data: Category[];\n  setTableData: Function;\n  item: any;\n  maindata: any;\n  openSubCategory: any;\n  edit: number;\n  setSubOpen: Function;\n  theme: string;\n  setForceRender: Function;\n  forceRender: any;\n  setData: Function;\n};\n\nexport default function CustomTable(props: Props) {\n  useEffect(() => {\n    props.setForceRender(!props.forceRender);\n  });\n  // ------------------------------Declarations-------------------------\n  const [formdata, setFormdata] = useState({\n    category: \"\",\n    type: \"\",\n    subcategoryid: \"\",\n    level: 0,\n  });\n  // ------------------------------Declarations-------------------------\n\n  // ------------------------------Functions-------------------------\n\n  // ------------------------------Functions for add sub category dialog-------------------------\n  function handleOpenSubCategory(subcategoryid: any, subcategorylevel: any) {\n    setFormdata({\n      ...formdata,\n      subcategoryid: subcategoryid,\n      level: subcategorylevel,\n    });\n    props.setSubOpen(true);\n  }\n  const handleCloseSubCategory = () => props.setSubOpen(false);\n\n  // ------------------------------Function for adding subcategories at nth level-------------------------\n  function addCategory(tableData: any, parentId: any, level: number) {\n    const updatedCategory = [...tableData];\n    uuid = uuidv4();\n    updatedCategory.forEach((category: any) => {\n      const newCategory = {\n        id: uuid,\n        category: formdata.category,\n        // values: [],\n        values: props.item.types.map((it: { type: string }) => {\n          return { typeName: it.type, typeValue: 0 };\n        }),\n        categories: [],\n        subcategories: [],\n        parentId: parentId,\n        currentLevel: level,\n      };\n      if (category.id === parentId) {\n        if (!category.subcategories) {\n          category.subcategories = [];\n        }\n\n        category.subcategories.push(newCategory);\n        return;\n      }\n      if (category.subcategories) {\n        addCategory(category.subcategories, parentId, level + 1);\n      }\n    });\n\n    const updatedItem = { ...props.item, categories: updatedCategory };\n\n    const updatedTableData = props.maindata.map((tableItem: any) =>\n      tableItem.id === props.item.id ? updatedItem : tableItem\n    );\n    props.setTableData(updatedTableData);\n\n    handleCloseSubCategory();\n  }\n\n  // ------------------------------Function for updating values of categories -------------------------\n  function updateValue(\n    tableData: any,\n    parentId: any,\n    id: any,\n    currentLevel: any,\n    index: any,\n    value: number\n  ) {\n    const updatedCategory = [...tableData];\n    updatedCategory.forEach((category: any) => {\n      if (category.id === id) {\n        // If we found the category with the matching ID, update its values array at the specified index\n        const updatedValues = [...category.values];\n        updatedValues[index].typeValue = value;\n        category.values = updatedValues;\n        return;\n      }\n      if (category.subcategories) {\n        // If the category has subcategories, recursively call the updateValue function on each one\n\n        updateValue(\n          category.subcategories,\n          category.id,\n          id,\n          currentLevel + 1,\n          index,\n          value\n        );\n      }\n    });\n\n    const updatedItem = { ...props.item, categories: updatedCategory };\n\n    const updatedTableData = props.maindata.map((tableItem: any) =>\n      tableItem.id === props.item.id ? updatedItem : tableItem\n    );\n    props.setTableData(updatedTableData);\n  }\n\n  // ------------------------------Function for deleting primary category -------------------------\n  function deleteCategory(id: any) {\n    const updatedfilteredItem = props.item.categories.filter(\n      (item: any, index: number) => item.id !== id\n    );\n    const updatedItem = {\n      ...props.item,\n      categories: updatedfilteredItem,\n    };\n    const updatedTableData = props.maindata.map((tableItem: any) =>\n      tableItem.id === props.item.id ? updatedItem : tableItem\n    );\n    props.setTableData(updatedTableData);\n    props.setData(updatedItem);\n  }\n\n  // ------------------------------Function for calculating sum of values of category having subcategories -------------------------\n  function updateValuesSum(subcategory: any, index: any) {\n    if (\n      subcategory.subcategories &&\n      subcategory.values[index] &&\n      subcategory.subcategories.length > 1\n    ) {\n      let sum = 0;\n      subcategory.subcategories.forEach((item: any) => {\n        sum += item.values[index].typeValue;\n      });\n      subcategory.values[index].typeValue = sum;\n    } else if (\n      subcategory.subcategories &&\n      subcategory.subcategories.length === 1\n    ) {\n      subcategory.values[index].typeValue =\n        subcategory.subcategories[0].values[index].typeValue;\n    }\n  }\n\n  // ------------------------------Function for displaying categories -------------------------\n  // const renderSubcategories = (subcategories: any) => {\n  //   return subcategories.map((subcategory: any, sindex: any) => {\n  //     if (subcategory.subcategories && subcategory.subcategories.length > 0) {\n  //       return (\n  //         <React.Fragment key={subcategory.id}>\n  //           <TableRow>\n  //             <TableCell colSpan={props.item.types.length + 2} width=\"auto\">\n  //               <Accordion>\n  //                 <AccordionSummary\n  //                   expandIcon={<ExpandMoreIcon />}\n  //                   style={{\n  //                     background: props.theme === \"light\" ? \"#fff\" : \"#edf0f4\",\n  //                     borderRadius: \"5px\",\n  //                   }}\n  //                 >\n  //                   <TableCell>\n  //                     <Typography>{subcategory.category}</Typography>\n  //                   </TableCell>\n\n  //                   {subcategory.values.map((value: any, index: any) => {\n  //                     updateValuesSum(subcategory, index);\n  //                     return (\n  //                       <TableCell>\n  //                         <Typography>{value.typeValue}</Typography>\n  //                       </TableCell>\n  //                     );\n  //                   })}\n\n  //                   {props.edit === 1 && (\n  //                     <>\n  //                       {subcategory.currentLevel === 0 && (\n  //                         <IconButton\n  //                           aria-label=\"delete\"\n  //                           color=\"error\"\n  //                           size=\"small\"\n  //                           onClick={() => deleteCategory(subcategory.id)}\n  //                         >\n  //                           <DeleteIcon fontSize=\"inherit\" />\n  //                         </IconButton>\n  //                       )}\n  //                       <IconButton\n  //                         aria-label=\"Add Another Category\"\n  //                         color=\"primary\"\n  //                         size=\"small\"\n  //                         onClick={(e) => {\n  //                           e.stopPropagation();\n  //                           handleOpenSubCategory(\n  //                             subcategory.id,\n  //                             subcategory.currentLevel + 1\n  //                           );\n  //                         }}\n  //                       >\n  //                         <AddIcon fontSize=\"inherit\" />\n  //                       </IconButton>\n  //                     </>\n  //                   )}\n  //                 </AccordionSummary>\n  //                 <AccordionDetails>\n  //                   {renderSubcategories(subcategory.subcategories)}\n  //                 </AccordionDetails>\n  //               </Accordion>\n  //             </TableCell>\n  //           </TableRow>\n  //         </React.Fragment>\n  //       );\n  //     } else {\n  //       return (\n  //         <React.Fragment key={subcategory.id}>\n  //           <TableRow\n  //             style={{\n  //               backgroundColor: props.theme === \"light\" ? \"\" : \"#fff\",\n  //             }}\n  //           >\n  //             <TableCell sx={{ maxWidth: 300, minWidth: 300 }}>\n  //               {subcategory.category}\n\n  //               {props.edit === 1 && (\n  //                 <>\n  //                   {subcategory.currentLevel === 0 && (\n  //                     <IconButton\n  //                       aria-label=\"delete\"\n  //                       color=\"error\"\n  //                       size=\"small\"\n  //                       onClick={() => deleteCategory(subcategory.id)}\n  //                     >\n  //                       <DeleteIcon fontSize=\"inherit\" />\n  //                     </IconButton>\n  //                   )}\n  //                   <IconButton\n  //                     aria-label=\"Add Another Category\"\n  //                     color=\"primary\"\n  //                     size=\"small\"\n  //                     onClick={(e) => {\n  //                       e.stopPropagation();\n  //                       handleOpenSubCategory(\n  //                         subcategory.id,\n  //                         subcategory.currentLevel + 1\n  //                       );\n  //                     }}\n  //                   >\n  //                     <AddIcon fontSize=\"inherit\" />\n  //                   </IconButton>\n  //                 </>\n  //               )}\n  //             </TableCell>\n  //             {props.item.types.map((type: any, index: any) => {\n  //               return (\n  //                 <TableCell style={{ padding: \"5px\" }}>\n  //                   <TextField\n  //                     margin=\"dense\"\n  //                     type=\"number\"\n  //                     fullWidth\n  //                     variant=\"outlined\"\n  //                     InputProps={{\n  //                       readOnly: props.edit === 0 ? true : false,\n  //                     }}\n  //                     sx={{ maxWidth: 400, minWidth: 400 }}\n  //                     value={subcategories[sindex].values[index].typeValue}\n  //                     onChange={(e) => {\n  //                       updateValue(\n  //                         props.data,\n  //                         subcategory.parentId,\n  //                         subcategory.id,\n  //                         subcategory.currentLevel,\n  //                         index,\n  //                         Number(e.target.value)\n  //                       );\n  //                     }}\n  //                   />\n  //                 </TableCell>\n  //               );\n  //             })}\n  //           </TableRow>\n  //         </React.Fragment>\n  //       );\n  //     }\n  //   });\n  // };\n\n  const renderSubcategories = (subcategories: any) => {\n    return subcategories.map((subcategory: any, sindex: any) => {\n      if (subcategory.subcategories && subcategory.subcategories.length > 0) {\n        return (\n          // <React.Fragment key={subcategory.id}>\n          //   <TableRow>\n          //     <TableCell colSpan={props.item.types.length + 2} width=\"auto\">\n          //       <Accordion>\n          //         <AccordionSummary\n          //           expandIcon={<ExpandMoreIcon />}\n          //           style={{\n          //             background: props.theme === \"light\" ? \"#fff\" : \"#edf0f4\",\n          //             borderRadius: \"5px\",\n          //           }}\n          //         >\n          //           <TableCell>\n          //             <Typography>{subcategory.category}</Typography>\n          //           </TableCell>\n\n          //           {subcategory.values.map((value: any, index: any) => {\n          //             updateValuesSum(subcategory, index);\n          //             return (\n          //               <TableCell>\n          //                 <Typography>{value.typeValue}</Typography>\n          //               </TableCell>\n          //             );\n          //           })}\n\n          //           {props.edit === 1 && (\n          //             <>\n          //               {subcategory.currentLevel === 0 && (\n          //                 <IconButton\n          //                   aria-label=\"delete\"\n          //                   color=\"error\"\n          //                   size=\"small\"\n          //                   onClick={() => deleteCategory(subcategory.id)}\n          //                 >\n          //                   <DeleteIcon fontSize=\"inherit\" />\n          //                 </IconButton>\n          //               )}\n          //               <IconButton\n          //                 aria-label=\"Add Another Category\"\n          //                 color=\"primary\"\n          //                 size=\"small\"\n          //                 onClick={(e) => {\n          //                   e.stopPropagation();\n          //                   handleOpenSubCategory(\n          //                     subcategory.id,\n          //                     subcategory.currentLevel + 1\n          //                   );\n          //                 }}\n          //               >\n          //                 <AddIcon fontSize=\"inherit\" />\n          //               </IconButton>\n          //             </>\n          //           )}\n          //         </AccordionSummary>\n          //         <AccordionDetails>\n          //           {renderSubcategories(subcategory.subcategories)}\n          //         </AccordionDetails>\n          //       </Accordion>\n          //     </TableCell>\n          //   </TableRow>\n          // </React.Fragment>\n          <React.Fragment key={subcategory.id}>\n            <TableRow\n              style={{\n                backgroundColor: props.theme === \"light\" ? \"\" : \"#fff\",\n              }}\n            >\n              <TableCell sx={{ maxWidth: 300, minWidth: 300 }}>\n                {subcategory.category}\n\n                {props.edit === 1 && (\n                  <>\n                    {subcategory.currentLevel === 0 && (\n                      <IconButton\n                        aria-label=\"delete\"\n                        color=\"error\"\n                        size=\"small\"\n                        onClick={() => deleteCategory(subcategory.id)}\n                      >\n                        <DeleteIcon fontSize=\"inherit\" />\n                      </IconButton>\n                    )}\n                    <IconButton\n                      aria-label=\"Add Another Category\"\n                      color=\"primary\"\n                      size=\"small\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        handleOpenSubCategory(\n                          subcategory.id,\n                          subcategory.currentLevel + 1\n                        );\n                      }}\n                    >\n                      <AddIcon fontSize=\"inherit\" />\n                    </IconButton>\n                  </>\n                )}\n                {subcategory.values.map((value: any, index: any) => {\n                  updateValuesSum(subcategory, index);\n                  return (\n                    <TableCell>\n                      <Typography>{value.typeValue}</Typography>\n                    </TableCell>\n                  );\n                })}\n              </TableCell>\n\n              \n            </TableRow>\n          </React.Fragment>\n        );\n      } else {\n        return (\n          <React.Fragment key={subcategory.id}>\n            <TableRow\n              style={{\n                backgroundColor: props.theme === \"light\" ? \"\" : \"#fff\",\n              }}\n            >\n              <TableCell sx={{ maxWidth: 300, minWidth: 300 }}>\n                {subcategory.category}\n\n                {props.edit === 1 && (\n                  <>\n                    {subcategory.currentLevel === 0 && (\n                      <IconButton\n                        aria-label=\"delete\"\n                        color=\"error\"\n                        size=\"small\"\n                        onClick={() => deleteCategory(subcategory.id)}\n                      >\n                        <DeleteIcon fontSize=\"inherit\" />\n                      </IconButton>\n                    )}\n                    <IconButton\n                      aria-label=\"Add Another Category\"\n                      color=\"primary\"\n                      size=\"small\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        handleOpenSubCategory(\n                          subcategory.id,\n                          subcategory.currentLevel + 1\n                        );\n                      }}\n                    >\n                      <AddIcon fontSize=\"inherit\" />\n                    </IconButton>\n                  </>\n                )}\n              </TableCell>\n              {props.item.types.map((type: any, index: any) => {\n                return (\n                  <TableCell style={{ padding: \"5px\" }}>\n                    <TextField\n                      margin=\"dense\"\n                      type=\"number\"\n                      fullWidth\n                      variant=\"outlined\"\n                      InputProps={{\n                        readOnly: props.edit === 0 ? true : false,\n                      }}\n                      sx={{ maxWidth: 400, minWidth: 400 }}\n                      value={subcategories[sindex].values[index].typeValue}\n                      onChange={(e) => {\n                        updateValue(\n                          props.data,\n                          subcategory.parentId,\n                          subcategory.id,\n                          subcategory.currentLevel,\n                          index,\n                          Number(e.target.value)\n                        );\n                      }}\n                    />\n                  </TableCell>\n                );\n              })}\n            </TableRow>\n          </React.Fragment>\n        );\n      }\n    });\n  };\n\n  // ------------------------------Function for deleting type -------------------------\n  function deleteType(tindex: number) {\n    const updatedTableData = { ...props.item };\n    const { categories } = updatedTableData;\n\n    // Helper function to update values recursively\n    const updateValues = (categoryArr: any) => {\n      categoryArr.forEach((category: any) => {\n        if (category.values) {\n          const filtered = category.values.filter(\n            (item: any, index: any) => index !== tindex\n          );\n\n          category.values = filtered;\n        }\n        if (category.subcategories) {\n          updateValues(category.subcategories);\n        }\n      });\n    };\n\n    // Remove type from table data types array\n    updatedTableData.types.splice(tindex, 1);\n\n    // Update values array for all categories at any level\n    updateValues(categories);\n\n    // Update table data in state\n    const updatedMainData = props.maindata.map((tableItem: any) =>\n      tableItem.id === props.item.id ? updatedTableData : tableItem\n    );\n    props.setTableData(updatedMainData);\n  }\n\n  // ------------------------------Functions End-------------------------\n\n  // ------------------------------Component-------------------------\n  return (\n    <>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow\n              style={{\n                background: props.theme === \"light\" ? \"#b3bfd1\" : \"#3e1046\",\n              }}\n            >\n              <TableCell\n                style={{\n                  color: props.theme === \"light\" ? \"#000\" : \"#fff\",\n                  fontSize: \"16px\",\n                  fontWeight: \"600\",\n                }}\n              >\n                {props.item.categoryname}\n              </TableCell>\n              {props.item.types.map((type: any, index: any) => {\n                return (\n                  <TableCell>\n                    <span\n                      style={{\n                        color: props.theme === \"light\" ? \"#000\" : \"#fff\",\n                        fontSize: \"16px\",\n                        fontWeight: \"600\",\n                      }}\n                    >\n                      {type.type}\n                    </span>\n\n                    {props.edit === 1 && (\n                      <IconButton\n                        aria-label=\"delete\"\n                        color=\"error\"\n                        size=\"small\"\n                        onClick={() => deleteType(index)}\n                      >\n                        <DeleteIcon fontSize=\"inherit\" />\n                      </IconButton>\n                    )}\n                  </TableCell>\n                );\n              })}\n            </TableRow>\n          </TableHead>\n          <TableBody>{renderSubcategories(props.data)}</TableBody>\n        </Table>\n      </TableContainer>\n\n      {/* //Sub Category Dialog */}\n      <Dialog open={props.openSubCategory} onClose={handleCloseSubCategory}>\n        <DialogTitle>Add New Sub Category Row</DialogTitle>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            addCategory(props.data, formdata.subcategoryid, formdata.level);\n          }}\n        >\n          <DialogContent>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              label=\"Category Name\"\n              type=\"text\"\n              fullWidth\n              variant=\"outlined\"\n              onChange={(e) =>\n                setFormdata({\n                  ...formdata,\n                  category: e.target.value,\n                })\n              }\n              required\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button\n              variant=\"outlined\"\n              color=\"error\"\n              onClick={handleCloseSubCategory}\n            >\n              Cancel\n            </Button>\n\n            <Button variant=\"outlined\" color=\"success\" type=\"submit\">\n              Create\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}