{"ast":null,"code":"var _jsxFileName = \"/home/wot-jainil/Desktop/Tasks/All-Tasks_Jainil_Solanki/React w-TS/tree-view-nested-dynamic-table-task/src/components/Tabledata.tsx\",\n  _s = $RefreshSig$();\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, TextField } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport CustomTable from \"./Customtable\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar uuid = uuidv4();\nexport default function Tabledata(props) {\n  _s();\n  // ------------------------------Declarations-------------------------\n\n  const [formdata, setFormdata] = useState({\n    category: \"\"\n  });\n  const [openCategory, setOpen] = useState(false);\n  const [openSubCategory, setSubOpen] = useState(false);\n  const handleOpenCategory = () => setOpen(true);\n  const handleCloseCategory = () => setOpen(false);\n\n  // const CustomTable states\n  const [data, setData] = useState({\n    ...props.tabledata\n  });\n  // ------------------------------Declarations-------------------------\n\n  // ------------------------------Functions-------------------------\n\n  // ------------------------------Function to add new primary category-------------------------\n  function addNewRow(e) {\n    e.preventDefault();\n    uuid = uuidv4();\n    const updatedItem = {\n      ...props.tabledata,\n      categories: [...props.tabledata.categories, {\n        id: uuid,\n        category: formdata.category,\n        values: props.tabledata.types.map(it => {\n          return {\n            typeName: it.type,\n            typeValue: 0\n          };\n        }),\n        //   values: [],\n        categories: [],\n        subcategories: [],\n        parentId: props.tabledata.id,\n        currentLevel: 0\n      }]\n    };\n    const updatedTableData = props.maindata.map(tableItem => tableItem.id === props.tabledata.id ? updatedItem : tableItem);\n    setData({\n      ...updatedItem\n    });\n    props.setTableData(updatedTableData);\n    handleCloseCategory();\n  }\n\n  // ------------------------------Function to add new type-------------------------\n\n  // ------------------------------Function to Delete Table from Main data-------------------------\n\n  // ------------------------------Function for edit button-------------------------\n\n  // ------------------------------Functions End-------------------------\n\n  // ------------------------------Component-------------------------\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-list\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          className: \"edit-btn\",\n          onClick: handleOpenCategory,\n          color: \"secondary\",\n          children: \"Add Category Row\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CustomTable\n    // data={props.tabledata.categories}\n    , {\n      data: data.categories,\n      setTableData: props.setTableData\n      // item={props.tabledata}\n      ,\n      item: data,\n      maindata: props.maindata,\n      openSubCategory: openSubCategory,\n      setSubOpen: setSubOpen,\n      theme: props.theme,\n      setForceRender: props.setForceRender,\n      forceRender: props.forceRender,\n      setData: setData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openCategory,\n      onClose: handleCloseCategory,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Add New Category Row\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => addNewRow(e),\n        children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            autoFocus: true,\n            margin: \"dense\",\n            id: \"name\",\n            label: \"Category Name\",\n            type: \"text\",\n            fullWidth: true,\n            variant: \"outlined\",\n            onChange: e => setFormdata({\n              ...formdata,\n              category: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"error\",\n            onClick: handleCloseCategory,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"success\",\n            type: \"submit\",\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(Tabledata, \"uqRPYNxg7wqOG/0PIsaBaSp+KwU=\");\n_c = Tabledata;\nvar _c;\n$RefreshReg$(_c, \"Tabledata\");","map":{"version":3,"names":["Button","Dialog","DialogActions","DialogContent","DialogTitle","TextField","React","useState","CustomTable","v4","uuidv4","jsxDEV","_jsxDEV","uuid","Tabledata","props","_s","formdata","setFormdata","category","openCategory","setOpen","openSubCategory","setSubOpen","handleOpenCategory","handleCloseCategory","data","setData","tabledata","addNewRow","e","preventDefault","updatedItem","categories","id","values","types","map","it","typeName","type","typeValue","subcategories","parentId","currentLevel","updatedTableData","maindata","tableItem","setTableData","className","children","variant","onClick","color","fileName","_jsxFileName","lineNumber","columnNumber","item","theme","setForceRender","forceRender","open","onClose","onSubmit","autoFocus","margin","label","fullWidth","onChange","target","value","required","_c","$RefreshReg$"],"sources":["/home/wot-jainil/Desktop/Tasks/All-Tasks_Jainil_Solanki/React w-TS/tree-view-nested-dynamic-table-task/src/components/Tabledata.tsx"],"sourcesContent":["import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n} from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport CustomTable from \"./Customtable\";\nimport { v4 as uuidv4 } from \"uuid\";\ntype Props = {\n  key: number;\n  tabledata: any;\n  theme: string;\n  setTableData: Function;\n  maindata: any;\n  setForceRender: Function;\n  forceRender: any;\n};\nvar uuid = uuidv4();\nexport default function Tabledata(props: Props) {\n  // ------------------------------Declarations-------------------------\n\n  const [formdata, setFormdata] = useState({ category: \"\" });\n  const [openCategory, setOpen] = useState(false);\n  const [openSubCategory, setSubOpen] = useState(false);\n\n  const handleOpenCategory = () => setOpen(true);\n  const handleCloseCategory = () => setOpen(false);\n\n  // const CustomTable states\n  const [data, setData] = useState<any>({ ...props.tabledata });\n  // ------------------------------Declarations-------------------------\n\n  // ------------------------------Functions-------------------------\n\n  // ------------------------------Function to add new primary category-------------------------\n  function addNewRow(e: any) {\n    e.preventDefault();\n    uuid = uuidv4();\n    const updatedItem = {\n      ...props.tabledata,\n      categories: [\n        ...props.tabledata.categories,\n        {\n          id: uuid,\n          category: formdata.category,\n          values: props.tabledata.types.map((it: { type: string }) => {\n            return { typeName: it.type, typeValue: 0 };\n          }),\n          //   values: [],\n          categories: [],\n          subcategories: [],\n          parentId: props.tabledata.id,\n          currentLevel: 0,\n        },\n      ],\n    };\n\n    const updatedTableData = props.maindata.map((tableItem: any) =>\n      tableItem.id === props.tabledata.id ? updatedItem : tableItem\n    );\n    setData({ ...updatedItem });\n    props.setTableData(updatedTableData);\n    handleCloseCategory();\n  }\n\n  // ------------------------------Function to add new type-------------------------\n\n  // ------------------------------Function to Delete Table from Main data-------------------------\n\n  // ------------------------------Function for edit button-------------------------\n\n  // ------------------------------Functions End-------------------------\n\n  // ------------------------------Component-------------------------\n  return (\n    <div className=\"container\">\n      <div className=\"table-header\">\n        <div className=\"btn-list\">\n          <Button\n            variant=\"contained\"\n            className=\"edit-btn\"\n            onClick={handleOpenCategory}\n            color=\"secondary\"\n          >\n            Add Category Row\n          </Button>\n\n          {/* <Button\n              variant=\"contained\"\n              className=\"edit-btn\"\n              color=\"success\"\n              onClick={() => saveEdit()}\n            >\n              Save\n            </Button>\n            <Button\n              variant=\"contained\"\n              className=\"edit-btn\"\n              color=\"error\"\n              onClick={() => cancelEdit()}\n            >\n              Cancel\n            </Button> */}\n        </div>\n      </div>\n      <br />\n\n      <CustomTable\n        // data={props.tabledata.categories}\n        data={data.categories}\n        setTableData={props.setTableData}\n        // item={props.tabledata}\n        item={data}\n        maindata={props.maindata}\n        openSubCategory={openSubCategory}\n        setSubOpen={setSubOpen}\n        theme={props.theme}\n        setForceRender={props.setForceRender}\n        forceRender={props.forceRender}\n        setData={setData}\n      />\n      {/* //Category Dialog */}\n      <Dialog open={openCategory} onClose={handleCloseCategory}>\n        <DialogTitle>Add New Category Row</DialogTitle>\n        <form onSubmit={(e) => addNewRow(e)}>\n          <DialogContent>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              label=\"Category Name\"\n              type=\"text\"\n              fullWidth\n              variant=\"outlined\"\n              onChange={(e) =>\n                setFormdata({ ...formdata, category: e.target.value })\n              }\n              required\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button\n              variant=\"outlined\"\n              color=\"error\"\n              onClick={handleCloseCategory}\n            >\n              Cancel\n            </Button>\n\n            <Button variant=\"outlined\" color=\"success\" type=\"submit\">\n              Create\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}